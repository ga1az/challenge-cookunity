import Head from "next/head";
import { useState } from "react";
import styles from "../styles/Home.module.css";

interface Event {
  id: string;
  title: string;
}

type Schedule = Map<string, Map<string, Event>>;

export default function Home() {
  const [date, setdate] = useState(() => new Date());
  const [schedule, setSchedule] = useState<Schedule>(() => new Map());

  function handleMonthChange(offset: number) {
    const newDate = new Date(date);
    newDate.setMonth(newDate.getMonth() + offset);
    setdate(newDate);
  }

  function handleNewEvent(key: string) {
    const newSchedule = new Map(schedule);

    if (!newSchedule.has(key)) {
      newSchedule.set(key, new Map());
    }

    const day = newSchedule.get(key)!;
    const id = String(+new Date());
    const title = window.prompt("Event title");

    if (!title) return;

    day.set(id, {
      id,
      title,
    });

    setSchedule(newSchedule);
  }

  function handleDeleteEvent(key: string, id: string) {
    const newSchedule = new Map(schedule);
    const day = newSchedule.get(key)!;
    day.delete(id);
    setSchedule(newSchedule);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button onClick={() => setdate(new Date())}>TO DAY</button>
        <nav>
          <button onClick={() => handleMonthChange(-1)}>←</button>
          {date.toLocaleString("default", { month: "long", year: "numeric" })}
          <button onClick={() => handleMonthChange(+1)}>→</button>
        </nav>
        <div className={styles.calendar}>
          {Array.from(
            {
              length: new Date(
                date.getFullYear(),
                date.getMonth() + 1,
                0
              ).getDate(),
            },
            (_, i) => {
              const key = `${date.getFullYear()}/${date.getMonth()}/${i + 1}}`;
              const events = schedule.get(key);

              return (
                <div
                  onClick={() => {
                    handleNewEvent(key);
                  }}
                  key={i}
                  className={styles.day}
                  style={{
                    borderColor:
                      new Date().getDate() === i + 1 ? "orange" : "gray",
                  }}
                >
                  {i + 1}
                  {events && (
                    <div
                      style={{
                        display: "flex",
                        gap: "0.3rem",
                        flexDirection: "column",
                      }}
                    >
                      {Array.from(events.values()).map((event) => (
                        <div
                          style={{
                            background: "#333",
                            padding: "2px 6px",
                            borderRadius: 4,
                            color: "#fff",
                            margin: "2px 0",
                          }}
                          key={event.id}
                          onClick={(e) => {
                            e.stopPropagation();
                            handleDeleteEvent(key, event.id);
                          }}
                        >
                          {event.title}
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              );
            }
          )}
        </div>
      </main>
    </div>
  );
}
